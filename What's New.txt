Symbolic Algebra [0.72]
-----------------------
- Sqrt(x) differentiation added
- differentiation for { "asin", "asinh", "acos", "acosh", "atan", "atanh", "asec", "asech", "acsc", "acsch", "acot", "acoth" }  implemented
- parsing for { "Sec", "Csc", "Cot", "Sech", "Csch", "Coth" , "ACosh", "ASinh", "ATanh", "ASec", "ACsc", "ACot", "ASech", "ACsch", "ACoth"} added in CoMath class  
- fixed  0- 1/(1+x)  yielded to only -1   which is now fixed.


Symbolic Algebra [0.71]
-----------------------
- Fixed parameter extraction in expression sin(3*x) to return x not 3*x
- in parsing expression to native function
    all parameters of the generated function is ordered by name 
	{ 
	 this will lower the overhead of guessing what parameter before what
	 and also will speed the execution because of getting rid of dictionary or tuple[] paramter array sending.
	}

- log(x) in parsing function is choosed as one parameter from Math.Log(x)  // needs enhancment if we used log(x,y)
- fixed negative triogonometric functions so that sin(-x) = -sin(x)

								

Symbolic Algebra [0.7]
----------------------
- enhanced the parsing to native functions
- corrected errors regarding calling nested functions and discovery of the nested parameters.
- enhanced the silver light version and added graphing ability to show the function trends.
   Dynamic Data Display for Silverlight (http://research.microsoft.com/en-us/um/cambridge/groups/science/tools/d3/dynamicdatadisplay.htm)



Symbolic Algebra [0.6]
----------------------
- Solved some issues (lot ones)
- At last you can differentiate multiplied functions like (sin(x)*cos(x))|x == cos(x)^2-sin(x)^2  :) :) :)
- fixed the log differentiation  after knowing the rule:   d/dx ln(g(x))  = g'(x)/g
-  and for fixing the log I had to alter the divide operation and adjusting lot of calcs here and there 
		{specially when symbolic power reach coefficient mode only I transfer its value to the numerical power and make it null 
		   either in primary term and in fused symbols}

- Added a native parsing so we can parse the resulted expression into a method to be called. (still calling function inside expression is not supported)
   this way we can form the expressions by calculations and get a function delegeate to execute it inside our program.

   double Execute(params Tuple<string, double>[] parameters)  // should be very illustrative from its body :)

- merged the silverlight application inside the solution (and altered the .csproj to include the files without copying them).

- Features not implemented yet:
	a] asin, acos in differentiation implementation.
	b] Ability to define custom functions in context and differentiate it also
	c] Division is not complete

Symbolic Algebra [0.5]
----------------------
- Added the ability to multiplication of many coeffecients with different power terms
	2^(x+z)*3^(x+y) * 2^v == 2^(x+z+v)*3^(x+y)

- Added Ability to differentiate coeffecients with symbolic powers and variables with symbolic powers
	u^(x^2)|x  == 2*log(u)*x*u^(x^2)
	


Symbolic Algebra [0.4]
-----------------------
- Corrected when differentiating special function raised to power  like  sin(x)^2  result in 2*cos(x)*sin(x)


Symbolic Algebra [0.3]
-----------------------

- Console Application that parse the variables and give results for speed testing :)
- Adding SymbolicVariable.Parse()  function  which includes +,-,/,* and pipe operator '|' that resemeble the differentiation 

- library can now distinguish the function and its parameters (it makes any necessary calculation inside the parameters to clean the value)

I mean if you wrote  sin(x+x) result will be sin(2*x)

- Differentiation of special functions has been implemented 
  Triogonometric functions and Hyperbolic

  so that writing  sin(3*x^2)|x    produce   6*x*sin(3*x^2)

This is actually a nice marvelous release.

still missing
triogonometric of power of 2 and more  like  sin(x)^2|x 
also  differentiating of number raised to symbol   (4^x)|x